{"version":3,"sources":["components/TabGroup.js","components/Footer.js","components/Layout.js","components/Error.js","components/CopyMe.js","components/Highlight.js","tabs/FormattedJson.js","tabs/XmlUtils.js","App.js","serviceWorker.js","index.js"],"names":["TabHeader","_ref","title","changeTab","classes","isSelected","push","react_default","a","createElement","onClick","className","join","Tab","props","children","TabGroup","_useState","useState","_useState2","Object","slicedToArray","tabIndex","setTabIndex","tabHeaders","React","Children","map","child","index","childProps","TabGroup_TabHeader","currentTab","toArray","Link","href","target","rel","Footer","Footer_Link","concat","process","VerticalSplit","Column","_ref2","Error","message","CopyMe","ref","useRef","Fragment","value","current","innerText","navigator","clipboard","writeText","fa","size","cloneElement","Highlight","lang","codeRef","useEffect","highlight","highlightBlock","components_CopyMe","FormattedJson","rawJson","setRawJson","_prettyPrint","content","pretty","parseError","JSON","stringify","parse","error","prettyPrint","Layout_VerticalSplit","Layout_Column","onChange","event","components_Error","components_Highlight","builder","xml2js","Builder","attrkey","headless","parser","Parser","async","xml","parseString","err","data","buildObject","escapeCharacters","&","<",">","\"","'","XmlFormat","rawXml","setRawXml","XmlEscape","_useState3","_useState4","escaped","entries","forEach","char","escapedVersion","replace","RegExp","xmlEscape","XmlUnescape","_useState5","_useState6","_xmlUnescape","unescaped","_ref3","_ref4","xmlUnescape","XmlUtils","components_TabGroup","TabGroup_Tab","XmlUtils_XmlFormat","XmlUtils_XmlEscape","XmlUtils_XmlUnescape","App","tabs_FormattedJson","tabs_XmlUtils","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c548b823.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst TabHeader = ({ title, changeTab, isSelected }) => {\n    const classes = ['tab-header'];\n\n    if (isSelected) {\n        classes.push('active-tab-header');\n    }\n\n    return (\n        <button onClick={changeTab} className={classes.join(' ')}>\n            {title}\n        </button>\n    );\n};\n\nexport const Tab = props => <section className=\"tab\">{props.children}</section>;\n\nconst TabGroup = props => {\n    const [tabIndex, setTabIndex] = useState(0);\n    const tabHeaders = React.Children.map(props.children, (child, index) => {\n        const childProps = {\n            changeTab: () => setTabIndex(index),\n            isSelected: tabIndex === index,\n            title: child.props.title,\n        };\n\n        return <TabHeader {...childProps} />;\n    });\n    const currentTab = React.Children.toArray(props.children)[tabIndex];\n\n    return (\n        <div className=\"tab-group\">\n            <nav className=\"tab-headers\">{tabHeaders}</nav>\n            <section className=\"tab-content\">{currentTab}</section>\n        </div>\n    );\n};\n\nexport default TabGroup;\n","import React from 'react';\n\nconst Link = ({ href, children }) => (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n        {children}\n    </a>\n);\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <nav>\n                <div>\n                    <h4>References</h4>\n                    <ul>\n                        <li>\n                            <Link href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\">\n                                MDN\n                            </Link>\n                        </li>\n                        <li>\n                            <Link href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">\n                                GFM Cheatsheet\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <h4>Misc</h4>\n                    <ul>\n                        <li>\n                            <Link href=\"http://news.ycombinator.com\">HN</Link>\n                        </li>\n                        <li>\n                            <Link href=\"https://github.com/alexashley\">\n                                GitHub\n                            </Link>\n                        </li>\n                        <li>\n                            <Link href=\"https://gist.github.com/alexashley\">\n                                Gists\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n            <span>{`version: ${process.env.REACT_APP_VERSION}`}</span>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\n\nexport const VerticalSplit = ({ children }) => {\n    return <div className=\"vertical-split-container\">{children}</div>;\n};\n\nexport const Column = ({ children, title }) => {\n    return (\n        <section className=\"column\">\n            {title ? <h2 className=\"column-title\">{title}</h2> : null}\n            {children}\n        </section>\n    );\n};\n","import React from 'react';\n\nconst Error = ({ message }) => <div className=\"error-message\">{message}</div>;\n\nexport default Error;\n","import React, { useRef } from 'react';\nimport { FaCopy } from 'react-icons/fa';\n\nconst CopyMe = ({ children }) => {\n    const ref = useRef(null);\n    const copy = () => {\n        const value = ref.current.value || ref.current.innerText;\n\n        navigator.clipboard.writeText(value);\n    };\n\n    return (\n        <React.Fragment>\n            <button onClick={copy} className=\"copy-button\">\n                <FaCopy size={20} />\n            </button>\n            {React.cloneElement(children, { ref })}\n        </React.Fragment>\n    );\n};\n\nexport default CopyMe;\n","import React, { useRef, useEffect } from 'react';\nimport highlight from 'highlight.js';\n\nimport CopyMe from './CopyMe';\n\nconst Highlight = ({ children, lang }) => {\n    const codeRef = useRef(null);\n\n    useEffect(() => {\n        highlight.highlightBlock(codeRef.current);\n    }, [children]);\n\n    return (\n        <CopyMe>\n            <pre>\n                <code ref={codeRef} className={lang}>\n                    {children}\n                </code>\n            </pre>\n        </CopyMe>\n    );\n};\n\nexport default Highlight;\n","import React, { useState } from 'react';\n\nimport { VerticalSplit, Column } from '../components/Layout';\nimport Error from '../components/Error';\nimport Highlight from '../components/Highlight';\nimport CopyMe from '../components/CopyMe';\n\nconst prettyPrint = content => {\n    let pretty = '';\n    let parseError = false;\n\n    try {\n        pretty = JSON.stringify(JSON.parse(content), null, 4);\n    } catch (error) {\n        parseError = error.message;\n    }\n\n    return {\n        pretty,\n        error: parseError,\n    };\n};\n\nconst FormattedJson = () => {\n    const [rawJson, setRawJson] = useState('{\"a\": \"b\", \"c\": [1, 2, 3]}');\n    const { pretty, error } = prettyPrint(rawJson);\n\n    return (\n        <VerticalSplit>\n            <Column title=\"Input\">\n                <CopyMe>\n                    <textarea\n                        className=\"text-area\"\n                        value={rawJson}\n                        onChange={event => setRawJson(event.target.value)}\n                    />\n                </CopyMe>\n            </Column>\n            <Column title=\"Formatted\">\n                {error ? (\n                    <Error message=\"Invalid JSON\" />\n                ) : (\n                    <Highlight lang=\"json\">{pretty}</Highlight>\n                )}\n            </Column>\n        </VerticalSplit>\n    );\n};\n\nexport default FormattedJson;\n","import React, { useState } from 'react';\nimport xml2js from 'xml2js';\n\nimport { VerticalSplit, Column } from '../components/Layout';\nimport TabGroup, { Tab } from '../components/TabGroup';\nimport CopyMe from '../components/CopyMe';\nimport Error from '../components/Error';\nimport Highlight from '../components/Highlight';\n\nconst builder = new xml2js.Builder({\n    attrkey: '__attributes',\n    headless: true,\n});\nconst parser = new xml2js.Parser({\n    async: false,\n    attrkey: '__attributes',\n});\n\nconst prettyPrint = xml => {\n    let pretty, error;\n\n    parser.parseString(xml, (err, data) => {\n        error = err;\n\n        if (data) {\n            pretty = builder.buildObject(data);\n        }\n    });\n\n    return {\n        error,\n        pretty,\n    };\n};\n\nconst escapeCharacters = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': 'gt;',\n    '\"': '&quot;',\n    \"'\": '&apos;',\n};\n\nconst xmlEscape = xml => {\n    let escaped = xml;\n\n    Object.entries(escapeCharacters).forEach(([char, escapedVersion]) => {\n        escaped = escaped.replace(new RegExp(char, 'g'), escapedVersion);\n    });\n\n    return escaped;\n};\n\nconst xmlUnescape = xml => {\n    let unescaped = xml;\n\n    Object.entries(escapeCharacters).forEach(([char, escapedVersion]) => {\n        unescaped = unescaped.replace(new RegExp(escapedVersion, 'g'), char);\n    });\n\n    return prettyPrint(unescaped);\n};\n\n// taken from https://docs.microsoft.com/en-us/windows/desktop/wsw/calculatorwsdl\nconst defaultXml = `\n<wsdl:definitions \n  xmlns:soap=\"https://schemas.xmlsoap.org/wsdl/soap/\" \n  xmlns:wsu=\"https://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\" \n  xmlns:soapenc=\"https://schemas.xmlsoap.org/soap/encoding/\" \n  xmlns:tns=\"https://Example.org\" \n  xmlns:wsa=\"https://schemas.xmlsoap.org/ws/2004/08/addressing\" \n  xmlns:wsp=\"https://schemas.xmlsoap.org/ws/2004/09/policy\" \n  xmlns:wsap=\"https://schemas.xmlsoap.org/ws/2004/08/addressing/policy\" \n  xmlns:xsd=\"https://www.w3.org/2001/XMLSchema\" \n  xmlns:msc=\"https://schemas.microsoft.com/ws/2005/12/wsdl/contract\" \n  xmlns:wsaw=\"https://www.w3.org/2006/05/addressing/wsdl\" \n  xmlns:soap12=\"https://schemas.xmlsoap.org/wsdl/soap12/\" \n  xmlns:wsa10=\"https://www.w3.org/2005/08/addressing\" \n  xmlns:wsx=\"https://schemas.xmlsoap.org/ws/2004/09/mex\" targetNamespace=\"https://Example.org\" \n  xmlns:wsdl=\"https://schemas.xmlsoap.org/wsdl/\">\n<wsdl:types>\n<xsd:schema targetNamespace=\"https://Example.org\" elementFormDefault=\"qualified\" >\n<xsd:element name=\"Add\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"a\" type=\"xsd:int\" />\n<xsd:element minOccurs=\"0\" name=\"b\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n<xsd:element name=\"AddResponse\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"result\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n<xsd:element name=\"Subtract\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"a\" type=\"xsd:int\" />\n<xsd:element minOccurs=\"0\" name=\"b\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n<xsd:element name=\"SubtractResponse\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"result\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n</xsd:schema>\n</wsdl:types>\n<wsdl:message name=\"ICalculator_Add_InputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:Add\" />\n</wsdl:message>\n<wsdl:message name=\"ICalculator_Add_OutputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:AddResponse\" />\n</wsdl:message>\n<wsdl:message name=\"ICalculator_Subtract_InputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:Subtract\" />\n</wsdl:message>\n<wsdl:message name=\"ICalculator_Subtract_OutputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:SubtractResponse\" />\n</wsdl:message>\n<wsdl:portType name=\"ICalculator\">\n<wsdl:operation name=\"Add\">\n<wsdl:input wsaw:Action=\"https://Example.org/ICalculator/Add\" message=\"tns:ICalculator_Add_InputMessage\" />\n<wsdl:output wsaw:Action=\"https://Example.org/ICalculator/AddResponse\" message=\"tns:ICalculator_Add_OutputMessage\" />\n</wsdl:operation>\n<wsdl:operation name=\"Subtract\">\n<wsdl:input wsaw:Action=\"https://Example.org/ICalculator/Subtract\" message=\"tns:ICalculator_Subtract_InputMessage\" />\n<wsdl:output wsaw:Action=\"https://Example.org/ICalculator/SubtractResponse\" message=\"tns:ICalculator_Subtract_OutputMessage\" />\n</wsdl:operation>\n</wsdl:portType>\n<wsdl:binding name=\"DefaultBinding_ICalculator\" type=\"tns:ICalculator\">\n<soap:binding transport=\"https://schemas.xmlsoap.org/soap/http\" />\n<wsdl:operation name=\"Add\">\n<soap:operation soapAction=\"https://Example.org/ICalculator/Add\" style=\"document\" />\n<wsdl:input>\n<soap:body use=\"literal\" />\n</wsdl:input>\n<wsdl:output>\n<soap:body use=\"literal\" />\n</wsdl:output>\n</wsdl:operation>\n<wsdl:operation name=\"Subtract\">\n<soap:operation soapAction=\"https://Example.org/ICalculator/Subtract\" style=\"document\" />\n<wsdl:input>\n<soap:body use=\"literal\" />\n</wsdl:input>\n<wsdl:output>\n<soap:body use=\"literal\" />\n</wsdl:output>\n</wsdl:operation>\n</wsdl:binding>\n<wsdl:service name=\"CalculatorService\">\n<wsdl:port name=\"ICalculator\" binding=\"tns:DefaultBinding_ICalculator\">\n<soap:address location=\"https://Example.org/ICalculator\" />\n</wsdl:port> \n</wsdl:service>\n</wsdl:definitions>`;\n\nconst XmlFormat = () => {\n    const [rawXml, setRawXml] = useState(defaultXml);\n    const { pretty, error } = prettyPrint(rawXml);\n\n    return (\n        <VerticalSplit>\n            <Column title=\"Input\">\n                <CopyMe>\n                    <textarea\n                        className=\"text-area\"\n                        value={rawXml}\n                        onChange={event => setRawXml(event.target.value)}\n                    />\n                </CopyMe>\n            </Column>\n            <Column title=\"Formatted\">\n                {error ? (\n                    <Error message=\"Invalid XML\" />\n                ) : (\n                    <Highlight lang=\"xml\">{pretty}</Highlight>\n                )}\n            </Column>\n        </VerticalSplit>\n    );\n};\n\nconst xmlEscapeDefault = `<wsdl:message name=\"ICalculator_Add_InputMessage\"><wsdl:part name=\"parameters\" element=\"tns:Add\" /></wsdl:message>`;\nconst XmlEscape = () => {\n    const [rawXml, setRawXml] = useState(xmlEscapeDefault);\n    const escaped = xmlEscape(rawXml);\n\n    return (\n        <VerticalSplit>\n            <Column title=\"Input\">\n                <CopyMe>\n                    <textarea\n                        className=\"text-area\"\n                        value={rawXml}\n                        onChange={event => setRawXml(event.target.value)}\n                    />\n                </CopyMe>\n            </Column>\n            <Column title=\"Escaped\">\n                <Highlight lang=\"xml\">{escaped}</Highlight>\n            </Column>\n        </VerticalSplit>\n    );\n};\n\nconst unescapeXmlDefault =\n    '&lt;wsdl:message name=&quot;ICalculator_Add_InputMessage&quot;gt;&lt;wsdl:part name=&quot;parameters&quot; element=&quot;tns:Add&quot; /gt;&lt;/wsdl:messagegt;';\nconst XmlUnescape = () => {\n    const [rawXml, setRawXml] = useState(unescapeXmlDefault);\n    const { pretty, error } = xmlUnescape(rawXml);\n\n    return (\n        <VerticalSplit>\n            <Column title=\"Input\">\n                <CopyMe>\n                    <textarea\n                        className=\"text-area\"\n                        value={rawXml}\n                        onChange={event => setRawXml(event.target.value)}\n                    />\n                </CopyMe>\n            </Column>\n            <Column title=\"Unescaped\">\n                {error ? (\n                    <Error message=\"Invalid XML\" />\n                ) : (\n                    <Highlight lang=\"xml\">{pretty}</Highlight>\n                )}\n            </Column>\n        </VerticalSplit>\n    );\n};\n\nconst XmlUtils = () => {\n    return (\n        <TabGroup>\n            <Tab title=\"format\">\n                <XmlFormat />\n            </Tab>\n            <Tab title=\"escape\">\n                <XmlEscape />\n            </Tab>\n            <Tab title=\"unescape\">\n                <XmlUnescape />\n            </Tab>\n        </TabGroup>\n    );\n};\n\nexport default XmlUtils;\n","import React from 'react';\nimport './App.css';\nimport '../node_modules/highlight.js/styles/darcula.css';\n\nimport TabGroup, { Tab } from './components/TabGroup';\nimport Footer from './components/Footer';\nimport FormattedJson from './tabs/FormattedJson';\nimport XmlUtils from './tabs/XmlUtils';\n\nconst App = () => {\n    return (\n        <React.Fragment>\n            <TabGroup>\n                <Tab title=\"json\">\n                    <FormattedJson />\n                </Tab>\n                <Tab title=\"xml\">\n                    <XmlUtils />\n                </Tab>\n                <Tab title=\"jwt\">\n                    <p>jwt tab</p>\n                </Tab>\n                <Tab title=\"md\">\n                    <p>md tab</p>\n                </Tab>\n                <Tab title=\"timer\">\n                    <p>timer tab</p>\n                </Tab>\n            </TabGroup>\n            <Footer />\n        </React.Fragment>\n    );\n};\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}