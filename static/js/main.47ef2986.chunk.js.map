{"version":3,"sources":["components/TabGroup.js","components/Footer.js","components/Layout.js","components/CopyMe.js","components/Error.js","components/Highlight.js","util/format.js","components/InputPreviewPane.js","tabs/FormattedJson.js","tabs/FormattedXml.js","util/xml.js","tabs/EscapeXml.js","tabs/UnescapeXml.js","tabs/JwtDecode.js","util/jwt.js","App.js","serviceWorker.js","index.js"],"names":["TabHeader","_ref","title","changeTab","classes","isSelected","push","react_default","a","createElement","onClick","className","join","Tab","props","children","TabGroup","_useState","useState","_useState2","Object","slicedToArray","tabIndex","setTabIndex","tabHeaders","React","Children","map","child","index","childProps","TabGroup_TabHeader","tabs","Link","href","target","rel","Footer","Footer_Link","concat","process","slice","VerticalSplit","Column","_ref2","CopyMe","ref","useRef","Fragment","value","current","innerText","navigator","clipboard","writeText","fa","size","cloneElement","Error","message","Highlight","lang","codeRef","useEffect","highlight","highlightBlock","components_CopyMe","json","content","formatted","parseError","JSON","stringify","parse","error","xml","beautify","console","InputPreviewPane","rawValue","setRawValue","transform","preview","format","Layout_VerticalSplit","Layout_Column","onChange","event","components_Error","toUpperCase","components_Highlight","FormattedJson","rawJson","setRawJson","components_InputPreviewPane","FormattedXml","rawXml","setRawXml","escapeCharacters","&","<",">","\"","'","escape","escaped","entries","forEach","char","escapedVersion","replace","RegExp","input","XmlEscape","unescaped","_ref3","_ref4","XmlUnescape","claims","jwt","_jwt$split","split","rawClaims","atob","JwtDecode","rawJwt","setRawJwt","App","components_TabGroup","TabGroup_Tab","tabs_FormattedJson","tabs_FormattedXml","EscapeXml","UnescapeXml","tabs_JwtDecode","components_Footer","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.47ef2986.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst TabHeader = ({ title, changeTab, isSelected }) => {\n    const classes = ['tab-header'];\n\n    if (isSelected) {\n        classes.push('active-tab-header');\n    }\n\n    return (\n        <button onClick={changeTab} className={classes.join(' ')}>\n            {title}\n        </button>\n    );\n};\n\nexport const Tab = (props) => (\n    <section className=\"tab\">{props.children}</section>\n);\n\nconst TabGroup = (props) => {\n    const [tabIndex, setTabIndex] = useState(0);\n    const tabHeaders = React.Children.map(props.children, (child, index) => {\n        const childProps = {\n            changeTab: () => setTabIndex(index),\n            isSelected: tabIndex === index,\n            title: child.props.title,\n        };\n\n        return <TabHeader {...childProps} />;\n    });\n    const tabs = React.Children.map(props.children, (child, index) => {\n        const classes = ['tab-content'];\n\n        if (index !== tabIndex) {\n            classes.push('hidden-tab');\n        } else {\n            classes.push('active-tab');\n        }\n\n        return <section className={classes.join(' ')}>{child}</section>;\n    });\n\n    return (\n        <div className=\"tab-group\">\n            <nav className=\"tab-headers\">{tabHeaders}</nav>\n            {tabs}\n        </div>\n    );\n};\n\nexport default TabGroup;\n","import React from 'react';\n\nconst Link = ({ href, children }) => (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n        {children}\n    </a>\n);\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <nav>\n                <div>\n                    <h4>References</h4>\n                    <ul>\n                        <li>\n                            <Link href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\">\n                                MDN\n                            </Link>\n                        </li>\n                        <li>\n                            <Link href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">\n                                GFM Cheatsheet\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n                <div>\n                    <h4>Misc</h4>\n                    <ul>\n                        <li>\n                            <Link href=\"http://news.ycombinator.com\">HN</Link>\n                        </li>\n                        <li>\n                            <Link href=\"https://github.com/alexashley\">\n                                GitHub\n                            </Link>\n                        </li>\n                        <li>\n                            <Link href=\"https://gist.github.com/alexashley\">\n                                Gists\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n            <Link\n                href={`https://github.com/alexashley/dev-toolkit-pwa/commit/${\n                    process.env.REACT_APP_VERSION\n                }`}\n            >\n                {`version: ${process.env.REACT_APP_VERSION.slice(0, 7)}`}\n            </Link>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\n\nexport const VerticalSplit = ({ children }) => {\n    return <div className=\"vertical-split-container\">{children}</div>;\n};\n\nexport const Column = ({ children, title }) => {\n    return (\n        <section className=\"column\">\n            {title ? <h2 className=\"column-title\">{title}</h2> : null}\n            {children}\n        </section>\n    );\n};\n","import React, { useRef } from 'react';\nimport { FaCopy } from 'react-icons/fa';\n\nconst CopyMe = ({ children }) => {\n    const ref = useRef(null);\n    const copy = () => {\n        const value = ref.current.value || ref.current.innerText;\n\n        navigator.clipboard.writeText(value);\n    };\n\n    return (\n        <React.Fragment>\n            <button onClick={copy} className=\"copy-button\">\n                <FaCopy size={20} />\n            </button>\n            {React.cloneElement(children, { ref })}\n        </React.Fragment>\n    );\n};\n\nexport default CopyMe;\n","import React from 'react';\n\nconst Error = ({ message }) => <div className=\"error-message\">{message}</div>;\n\nexport default Error;\n","import React, { useRef, useEffect } from 'react';\nimport highlight from 'highlight.js';\n\nimport CopyMe from './CopyMe';\n\nconst Highlight = ({ children, lang }) => {\n    const codeRef = useRef(null);\n\n    useEffect(() => {\n        highlight.highlightBlock(codeRef.current);\n    }, [children]);\n\n    return (\n        <CopyMe>\n            <pre className={'highlight'}>\n                <code ref={codeRef} className={lang}>\n                    {children}\n                </code>\n            </pre>\n        </CopyMe>\n    );\n};\n\nexport default Highlight;\n","import beautify from 'vkbeautify';\n\nexport const json = (content) => {\n    let formatted = '';\n    let parseError = false;\n\n    try {\n        formatted = JSON.stringify(JSON.parse(content), null, 4);\n    } catch (error) {\n        parseError = error.message;\n    }\n\n    return {\n        formatted,\n        error: parseError,\n    };\n};\n\nexport const xml = (xml) => {\n    let formatted = '',\n        parseError = false;\n\n    try {\n        formatted = beautify.xml(xml);\n    } catch (error) {\n        parseError = true;\n        console.error(error);\n    }\n\n    return {\n        error: parseError,\n        formatted,\n    };\n};\n","import { Column, VerticalSplit } from './Layout';\nimport CopyMe from './CopyMe';\nimport Error from './Error';\nimport Highlight from './Highlight';\nimport React from 'react';\nimport * as format from '../util/format';\n\nconst InputPreviewPane = ({ rawValue, setRawValue, lang, transform }) => {\n    let preview = {};\n\n    if (transform) {\n        preview = transform(rawValue);\n    } else {\n        preview = format[lang](rawValue);\n    }\n\n    return (\n        <VerticalSplit>\n            <Column>\n                <CopyMe>\n                    <textarea\n                        className=\"text-area\"\n                        value={rawValue}\n                        onChange={(event) => setRawValue(event.target.value)}\n                    />\n                </CopyMe>\n            </Column>\n            <Column>\n                {preview.error ? (\n                    <Error message={`Invalid ${lang.toUpperCase()}`} />\n                ) : (\n                    <Highlight lang={lang}>{preview.formatted}</Highlight>\n                )}\n            </Column>\n        </VerticalSplit>\n    );\n};\n\nexport default InputPreviewPane;\n","import React, { useState } from 'react';\n\nimport InputPreviewPane from '../components/InputPreviewPane';\n\nconst FormattedJson = () => {\n    const [rawJson, setRawJson] = useState('{\"a\": \"b\", \"c\": [1, 2, 3]}');\n\n    return (\n        <InputPreviewPane\n            lang={'json'}\n            rawValue={rawJson}\n            setRawValue={setRawJson}\n        />\n    );\n};\n\nexport default FormattedJson;\n","import React, { useState } from 'react';\nimport InputPreviewPane from '../components/InputPreviewPane';\n\n// taken from https://docs.microsoft.com/en-us/windows/desktop/wsw/calculatorwsdl\nconst defaultXml = `\n<wsdl:definitions \n  xmlns:soap=\"https://schemas.xmlsoap.org/wsdl/soap/\" \n  xmlns:wsu=\"https://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\" \n  xmlns:soapenc=\"https://schemas.xmlsoap.org/soap/encoding/\" \n  xmlns:tns=\"https://Example.org\" \n  xmlns:wsa=\"https://schemas.xmlsoap.org/ws/2004/08/addressing\" \n  xmlns:wsp=\"https://schemas.xmlsoap.org/ws/2004/09/policy\" \n  xmlns:wsap=\"https://schemas.xmlsoap.org/ws/2004/08/addressing/policy\" \n  xmlns:xsd=\"https://www.w3.org/2001/XMLSchema\" \n  xmlns:msc=\"https://schemas.microsoft.com/ws/2005/12/wsdl/contract\" \n  xmlns:wsaw=\"https://www.w3.org/2006/05/addressing/wsdl\" \n  xmlns:soap12=\"https://schemas.xmlsoap.org/wsdl/soap12/\" \n  xmlns:wsa10=\"https://www.w3.org/2005/08/addressing\" \n  xmlns:wsx=\"https://schemas.xmlsoap.org/ws/2004/09/mex\" targetNamespace=\"https://Example.org\" \n  xmlns:wsdl=\"https://schemas.xmlsoap.org/wsdl/\">\n<wsdl:types>\n<xsd:schema targetNamespace=\"https://Example.org\" elementFormDefault=\"qualified\" >\n<xsd:element name=\"Add\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"a\" type=\"xsd:int\" />\n<xsd:element minOccurs=\"0\" name=\"b\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n<xsd:element name=\"AddResponse\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"result\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n<xsd:element name=\"Subtract\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"a\" type=\"xsd:int\" />\n<xsd:element minOccurs=\"0\" name=\"b\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n<xsd:element name=\"SubtractResponse\">\n<xsd:complexType>\n<xsd:sequence>\n<xsd:element minOccurs=\"0\" name=\"result\" type=\"xsd:int\" />\n</xsd:sequence>\n</xsd:complexType>\n</xsd:element>\n</xsd:schema>\n</wsdl:types>\n<wsdl:message name=\"ICalculator_Add_InputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:Add\" />\n</wsdl:message>\n<wsdl:message name=\"ICalculator_Add_OutputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:AddResponse\" />\n</wsdl:message>\n<wsdl:message name=\"ICalculator_Subtract_InputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:Subtract\" />\n</wsdl:message>\n<wsdl:message name=\"ICalculator_Subtract_OutputMessage\">\n<wsdl:part name=\"parameters\" element=\"tns:SubtractResponse\" />\n</wsdl:message>\n<wsdl:portType name=\"ICalculator\">\n<wsdl:operation name=\"Add\">\n<wsdl:input wsaw:Action=\"https://Example.org/ICalculator/Add\" message=\"tns:ICalculator_Add_InputMessage\" />\n<wsdl:output wsaw:Action=\"https://Example.org/ICalculator/AddResponse\" message=\"tns:ICalculator_Add_OutputMessage\" />\n</wsdl:operation>\n<wsdl:operation name=\"Subtract\">\n<wsdl:input wsaw:Action=\"https://Example.org/ICalculator/Subtract\" message=\"tns:ICalculator_Subtract_InputMessage\" />\n<wsdl:output wsaw:Action=\"https://Example.org/ICalculator/SubtractResponse\" message=\"tns:ICalculator_Subtract_OutputMessage\" />\n</wsdl:operation>\n</wsdl:portType>\n<wsdl:binding name=\"DefaultBinding_ICalculator\" type=\"tns:ICalculator\">\n<soap:binding transport=\"https://schemas.xmlsoap.org/soap/http\" />\n<wsdl:operation name=\"Add\">\n<soap:operation soapAction=\"https://Example.org/ICalculator/Add\" style=\"document\" />\n<wsdl:input>\n<soap:body use=\"literal\" />\n</wsdl:input>\n<wsdl:output>\n<soap:body use=\"literal\" />\n</wsdl:output>\n</wsdl:operation>\n<wsdl:operation name=\"Subtract\">\n<soap:operation soapAction=\"https://Example.org/ICalculator/Subtract\" style=\"document\" />\n<wsdl:input>\n<soap:body use=\"literal\" />\n</wsdl:input>\n<wsdl:output>\n<soap:body use=\"literal\" />\n</wsdl:output>\n</wsdl:operation>\n</wsdl:binding>\n<wsdl:service name=\"CalculatorService\">\n<wsdl:port name=\"ICalculator\" binding=\"tns:DefaultBinding_ICalculator\">\n<soap:address location=\"https://Example.org/ICalculator\" />\n</wsdl:port> \n</wsdl:service>\n</wsdl:definitions>`;\n\nconst FormattedXml = () => {\n    const [rawXml, setRawXml] = useState(defaultXml);\n\n    return (\n        <InputPreviewPane\n            lang={'xml'}\n            rawValue={rawXml}\n            setRawValue={setRawXml}\n        />\n    );\n};\n\nexport default FormattedXml;\n","const escapeCharacters = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&apos;',\n};\n\nexport const escape = (xml) => {\n    let escaped = xml;\n\n    Object.entries(escapeCharacters).forEach(([char, escapedVersion]) => {\n        escaped = escaped.replace(new RegExp(char, 'g'), escapedVersion);\n    });\n\n    return escaped;\n};\n\nexport const unescape = (xml) => {\n    let unescaped = xml;\n\n    Object.entries(escapeCharacters).forEach(([char, escapedVersion]) => {\n        unescaped = unescaped.replace(new RegExp(escapedVersion, 'g'), char);\n    });\n\n    return unescaped;\n};\n","import InputPreviewPane from '../components/InputPreviewPane';\nimport * as xml from '../util/xml';\nimport React, { useState } from 'react';\n\nconst defaultInput = `<wsdl:message name=\"ICalculator_Add_InputMessage\"><wsdl:part name=\"parameters\" element=\"tns:Add\" /></wsdl:message>`;\n\nconst transform = (input) => {\n    return {\n        formatted: xml.escape(input),\n    };\n};\n\nconst XmlEscape = () => {\n    const [rawXml, setRawXml] = useState(defaultInput);\n\n    return (\n        <InputPreviewPane\n            lang={'xml'}\n            transform={transform}\n            rawValue={rawXml}\n            setRawValue={setRawXml}\n        />\n    );\n};\n\nexport default XmlEscape;\n","import InputPreviewPane from '../components/InputPreviewPane';\nimport * as xml from '../util/xml';\nimport * as format from '../util/format';\nimport React, { useState } from 'react';\n\nconst defaultInput = `&lt;wsdl:message name=&quot;ICalculator_Add_InputMessage&quot;&gt;&lt;wsdl:part name=&quot;parameters&quot; element=&quot;tns:Add&quot; /&gt;&lt;/wsdl:message&gt;`;\n\nconst transform = (input) => {\n    const unescaped = xml.unescape(input);\n\n    return format.xml(unescaped);\n};\n\nconst XmlUnescape = () => {\n    const [rawXml, setRawXml] = useState(defaultInput);\n\n    return (\n        <InputPreviewPane\n            lang={'xml'}\n            transform={transform}\n            rawValue={rawXml}\n            setRawValue={setRawXml}\n        />\n    );\n};\n\nexport default XmlUnescape;\n","import React, { useState } from 'react';\n\nimport InputPreviewPane from '../components/InputPreviewPane';\nimport * as jwt from '../util/jwt';\nimport * as format from '../util/format';\n\nconst defaultInput =\n    'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlhdCI6MTUxNjIzOTAyMn0.TCYt5XsITJX1CxPCT8yAV-TVkIEq_PbChOMqsLfRoPsnsgw5WEuts01mq-pQy7UJiN5mgRxD-WUcX16dUEMGlv50aqzpqh4Qktb3rk-BuQy72IFLOqV0G_zS245-kronKb78cPN25DGlcTwLtjPAYuNzVBAh4vGHSrQyHUdBBPM';\n\nconst transform = (input) => {\n    const claims = jwt.decode(input);\n\n    return format.json(claims);\n};\n\nconst JwtDecode = () => {\n    const [rawJwt, setRawJwt] = useState(defaultInput);\n\n    return (\n        <InputPreviewPane\n            lang={'json'}\n            transform={transform}\n            rawValue={rawJwt}\n            setRawValue={setRawJwt}\n        />\n    );\n};\n\nexport default JwtDecode;\n","export const decode = (jwt) => {\n    if (!jwt) {\n        return '';\n    }\n\n    const [, rawClaims] = jwt.split('.');\n\n    if (!rawClaims) {\n        return '';\n    }\n\n    return atob(rawClaims.replace(/_/g, '/').replace(/-/g, '+'));\n};\n","import React from 'react';\nimport './App.css';\nimport '../node_modules/highlight.js/styles/darcula.css';\n\nimport TabGroup, { Tab } from './components/TabGroup';\nimport Footer from './components/Footer';\nimport FormattedJson from './tabs/FormattedJson';\nimport FormattedXml from './tabs/FormattedXml';\nimport EscapeXml from './tabs/EscapeXml';\nimport UnescapeXml from './tabs/UnescapeXml';\nimport JwtDecode from './tabs/JwtDecode';\n\nconst App = () => {\n    return (\n        <div className=\"app\">\n            <TabGroup>\n                <Tab title=\"json\">\n                    <FormattedJson />\n                </Tab>\n                <Tab title=\"xml\">\n                    <FormattedXml />\n                </Tab>\n                <Tab title=\"escape xml\">\n                    <EscapeXml />\n                </Tab>\n                <Tab title=\"unescape xml\">\n                    <UnescapeXml />\n                </Tab>\n                <Tab title=\"jwt decode\">\n                    <JwtDecode />\n                </Tab>\n                <Tab title=\"jwt encode\">\n                    <p>jwt tab</p>\n                </Tab>\n                <Tab title=\"md\">\n                    <p>md tab</p>\n                </Tab>\n                <Tab title=\"timer\">\n                    <p>timer tab</p>\n                </Tab>\n            </TabGroup>\n            <Footer />\n        </div>\n    );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}